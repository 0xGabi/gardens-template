/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IConvictionVotingInterface extends ethers.utils.Interface {
  functions: {
    "addProposal(string,bytes,uint256,bool,address)": FunctionFragment;
    "UPDATE_SETTINGS_ROLE()": FunctionFragment;
    "initialize(address,address,address,address,address,uint256,uint256,uint256,uint256)": FunctionFragment;
    "CHALLENGE_ROLE()": FunctionFragment;
    "SET_AGREEMENT_ROLE()": FunctionFragment;
    "PAUSE_CONTRACT_ROLE()": FunctionFragment;
    "CREATE_PROPOSALS_ROLE()": FunctionFragment;
    "CANCEL_PROPOSALS_ROLE()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addProposal",
    values: [string, BytesLike, BigNumberish, boolean, string]
  ): string;
  encodeFunctionData(
    functionFragment: "UPDATE_SETTINGS_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [
      string,
      string,
      string,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "CHALLENGE_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SET_AGREEMENT_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PAUSE_CONTRACT_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CREATE_PROPOSALS_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CANCEL_PROPOSALS_ROLE",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "addProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "UPDATE_SETTINGS_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "CHALLENGE_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SET_AGREEMENT_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PAUSE_CONTRACT_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CREATE_PROPOSALS_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CANCEL_PROPOSALS_ROLE",
    data: BytesLike
  ): Result;

  events: {};
}

export class IConvictionVoting extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IConvictionVotingInterface;

  functions: {
    addProposal(
      _title: string,
      _link: BytesLike,
      _requestedAmount: BigNumberish,
      _stableRequestAmount: boolean,
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addProposal(string,bytes,uint256,bool,address)"(
      _title: string,
      _link: BytesLike,
      _requestedAmount: BigNumberish,
      _stableRequestAmount: boolean,
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    UPDATE_SETTINGS_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "UPDATE_SETTINGS_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    initialize(
      _stakeToken: string,
      _requestToken: string,
      _stableToken: string,
      _stableTokenOracle: string,
      _vault: string,
      _decay: BigNumberish,
      _maxRatio: BigNumberish,
      _weight: BigNumberish,
      _minThresholdStakePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address,address,address,address,address,uint256,uint256,uint256,uint256)"(
      _stakeToken: string,
      _requestToken: string,
      _stableToken: string,
      _stableTokenOracle: string,
      _vault: string,
      _decay: BigNumberish,
      _maxRatio: BigNumberish,
      _weight: BigNumberish,
      _minThresholdStakePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    CHALLENGE_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "CHALLENGE_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    SET_AGREEMENT_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "SET_AGREEMENT_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    PAUSE_CONTRACT_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "PAUSE_CONTRACT_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    CREATE_PROPOSALS_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "CREATE_PROPOSALS_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    CANCEL_PROPOSALS_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "CANCEL_PROPOSALS_ROLE()"(overrides?: CallOverrides): Promise<[string]>;
  };

  addProposal(
    _title: string,
    _link: BytesLike,
    _requestedAmount: BigNumberish,
    _stableRequestAmount: boolean,
    _beneficiary: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addProposal(string,bytes,uint256,bool,address)"(
    _title: string,
    _link: BytesLike,
    _requestedAmount: BigNumberish,
    _stableRequestAmount: boolean,
    _beneficiary: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  UPDATE_SETTINGS_ROLE(overrides?: CallOverrides): Promise<string>;

  "UPDATE_SETTINGS_ROLE()"(overrides?: CallOverrides): Promise<string>;

  initialize(
    _stakeToken: string,
    _requestToken: string,
    _stableToken: string,
    _stableTokenOracle: string,
    _vault: string,
    _decay: BigNumberish,
    _maxRatio: BigNumberish,
    _weight: BigNumberish,
    _minThresholdStakePercentage: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address,address,address,address,address,uint256,uint256,uint256,uint256)"(
    _stakeToken: string,
    _requestToken: string,
    _stableToken: string,
    _stableTokenOracle: string,
    _vault: string,
    _decay: BigNumberish,
    _maxRatio: BigNumberish,
    _weight: BigNumberish,
    _minThresholdStakePercentage: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  CHALLENGE_ROLE(overrides?: CallOverrides): Promise<string>;

  "CHALLENGE_ROLE()"(overrides?: CallOverrides): Promise<string>;

  SET_AGREEMENT_ROLE(overrides?: CallOverrides): Promise<string>;

  "SET_AGREEMENT_ROLE()"(overrides?: CallOverrides): Promise<string>;

  PAUSE_CONTRACT_ROLE(overrides?: CallOverrides): Promise<string>;

  "PAUSE_CONTRACT_ROLE()"(overrides?: CallOverrides): Promise<string>;

  CREATE_PROPOSALS_ROLE(overrides?: CallOverrides): Promise<string>;

  "CREATE_PROPOSALS_ROLE()"(overrides?: CallOverrides): Promise<string>;

  CANCEL_PROPOSALS_ROLE(overrides?: CallOverrides): Promise<string>;

  "CANCEL_PROPOSALS_ROLE()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    addProposal(
      _title: string,
      _link: BytesLike,
      _requestedAmount: BigNumberish,
      _stableRequestAmount: boolean,
      _beneficiary: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addProposal(string,bytes,uint256,bool,address)"(
      _title: string,
      _link: BytesLike,
      _requestedAmount: BigNumberish,
      _stableRequestAmount: boolean,
      _beneficiary: string,
      overrides?: CallOverrides
    ): Promise<void>;

    UPDATE_SETTINGS_ROLE(overrides?: CallOverrides): Promise<string>;

    "UPDATE_SETTINGS_ROLE()"(overrides?: CallOverrides): Promise<string>;

    initialize(
      _stakeToken: string,
      _requestToken: string,
      _stableToken: string,
      _stableTokenOracle: string,
      _vault: string,
      _decay: BigNumberish,
      _maxRatio: BigNumberish,
      _weight: BigNumberish,
      _minThresholdStakePercentage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,address,address,address,address,uint256,uint256,uint256,uint256)"(
      _stakeToken: string,
      _requestToken: string,
      _stableToken: string,
      _stableTokenOracle: string,
      _vault: string,
      _decay: BigNumberish,
      _maxRatio: BigNumberish,
      _weight: BigNumberish,
      _minThresholdStakePercentage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    CHALLENGE_ROLE(overrides?: CallOverrides): Promise<string>;

    "CHALLENGE_ROLE()"(overrides?: CallOverrides): Promise<string>;

    SET_AGREEMENT_ROLE(overrides?: CallOverrides): Promise<string>;

    "SET_AGREEMENT_ROLE()"(overrides?: CallOverrides): Promise<string>;

    PAUSE_CONTRACT_ROLE(overrides?: CallOverrides): Promise<string>;

    "PAUSE_CONTRACT_ROLE()"(overrides?: CallOverrides): Promise<string>;

    CREATE_PROPOSALS_ROLE(overrides?: CallOverrides): Promise<string>;

    "CREATE_PROPOSALS_ROLE()"(overrides?: CallOverrides): Promise<string>;

    CANCEL_PROPOSALS_ROLE(overrides?: CallOverrides): Promise<string>;

    "CANCEL_PROPOSALS_ROLE()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    addProposal(
      _title: string,
      _link: BytesLike,
      _requestedAmount: BigNumberish,
      _stableRequestAmount: boolean,
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addProposal(string,bytes,uint256,bool,address)"(
      _title: string,
      _link: BytesLike,
      _requestedAmount: BigNumberish,
      _stableRequestAmount: boolean,
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    UPDATE_SETTINGS_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "UPDATE_SETTINGS_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _stakeToken: string,
      _requestToken: string,
      _stableToken: string,
      _stableTokenOracle: string,
      _vault: string,
      _decay: BigNumberish,
      _maxRatio: BigNumberish,
      _weight: BigNumberish,
      _minThresholdStakePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address,address,address,address,address,uint256,uint256,uint256,uint256)"(
      _stakeToken: string,
      _requestToken: string,
      _stableToken: string,
      _stableTokenOracle: string,
      _vault: string,
      _decay: BigNumberish,
      _maxRatio: BigNumberish,
      _weight: BigNumberish,
      _minThresholdStakePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    CHALLENGE_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "CHALLENGE_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    SET_AGREEMENT_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "SET_AGREEMENT_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    PAUSE_CONTRACT_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "PAUSE_CONTRACT_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    CREATE_PROPOSALS_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "CREATE_PROPOSALS_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    CANCEL_PROPOSALS_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "CANCEL_PROPOSALS_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    addProposal(
      _title: string,
      _link: BytesLike,
      _requestedAmount: BigNumberish,
      _stableRequestAmount: boolean,
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addProposal(string,bytes,uint256,bool,address)"(
      _title: string,
      _link: BytesLike,
      _requestedAmount: BigNumberish,
      _stableRequestAmount: boolean,
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    UPDATE_SETTINGS_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "UPDATE_SETTINGS_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _stakeToken: string,
      _requestToken: string,
      _stableToken: string,
      _stableTokenOracle: string,
      _vault: string,
      _decay: BigNumberish,
      _maxRatio: BigNumberish,
      _weight: BigNumberish,
      _minThresholdStakePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address,address,address,address,address,uint256,uint256,uint256,uint256)"(
      _stakeToken: string,
      _requestToken: string,
      _stableToken: string,
      _stableTokenOracle: string,
      _vault: string,
      _decay: BigNumberish,
      _maxRatio: BigNumberish,
      _weight: BigNumberish,
      _minThresholdStakePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    CHALLENGE_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "CHALLENGE_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    SET_AGREEMENT_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "SET_AGREEMENT_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PAUSE_CONTRACT_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "PAUSE_CONTRACT_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    CREATE_PROPOSALS_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "CREATE_PROPOSALS_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    CANCEL_PROPOSALS_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "CANCEL_PROPOSALS_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
