/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface AgentInterface extends ethers.utils.Interface {
  functions: {
    "ADD_PROTECTED_TOKEN_ROLE()": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "hasInitialized()": FunctionFragment;
    "ERC1271_INTERFACE_ID()": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
    "isValidSignature(bytes32,bytes)": FunctionFragment;
    "ERC1271_RETURN_INVALID_SIGNATURE()": FunctionFragment;
    "TRANSFER_ROLE()": FunctionFragment;
    "getProtectedTokensLength()": FunctionFragment;
    "getEVMScriptExecutor(bytes)": FunctionFragment;
    "getRecoveryVault()": FunctionFragment;
    "RUN_SCRIPT_ROLE()": FunctionFragment;
    "SAFE_EXECUTE_ROLE()": FunctionFragment;
    "REMOVE_PROTECTED_TOKEN_ROLE()": FunctionFragment;
    "deposit(address,uint256)": FunctionFragment;
    "isDepositable()": FunctionFragment;
    "presignHash(bytes32)": FunctionFragment;
    "DESIGNATE_SIGNER_ROLE()": FunctionFragment;
    "removeProtectedToken(address)": FunctionFragment;
    "EXECUTE_ROLE()": FunctionFragment;
    "addProtectedToken(address)": FunctionFragment;
    "allowRecoverability(address)": FunctionFragment;
    "appId()": FunctionFragment;
    "initialize()": FunctionFragment;
    "protectedTokens(uint256)": FunctionFragment;
    "getInitializationBlock()": FunctionFragment;
    "ERC1271_RETURN_VALID_SIGNATURE()": FunctionFragment;
    "transferToVault(address)": FunctionFragment;
    "canPerform(address,bytes32,uint256[])": FunctionFragment;
    "getEVMScriptRegistry()": FunctionFragment;
    "setDesignatedSigner(address)": FunctionFragment;
    "designatedSigner()": FunctionFragment;
    "safeExecute(address,bytes)": FunctionFragment;
    "PROTECTED_TOKENS_CAP()": FunctionFragment;
    "ADD_PRESIGNED_HASH_ROLE()": FunctionFragment;
    "isPresigned(bytes32)": FunctionFragment;
    "execute(address,uint256,bytes)": FunctionFragment;
    "transfer(address,address,uint256)": FunctionFragment;
    "canForward(address,bytes)": FunctionFragment;
    "kernel()": FunctionFragment;
    "forward(bytes)": FunctionFragment;
    "isPetrified()": FunctionFragment;
    "balance(address)": FunctionFragment;
    "isForwarder()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "ADD_PROTECTED_TOKEN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasInitialized",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERC1271_INTERFACE_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isValidSignature",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "ERC1271_RETURN_INVALID_SIGNATURE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TRANSFER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProtectedTokensLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEVMScriptExecutor",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRecoveryVault",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "RUN_SCRIPT_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SAFE_EXECUTE_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "REMOVE_PROTECTED_TOKEN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deposit",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isDepositable",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "presignHash",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "DESIGNATE_SIGNER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeProtectedToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "EXECUTE_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addProtectedToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "allowRecoverability",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "appId", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "protectedTokens",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getInitializationBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERC1271_RETURN_VALID_SIGNATURE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferToVault",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "canPerform",
    values: [string, BytesLike, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getEVMScriptRegistry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setDesignatedSigner",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "designatedSigner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "safeExecute",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "PROTECTED_TOKENS_CAP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ADD_PRESIGNED_HASH_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isPresigned",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "execute",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "canForward",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "kernel", values?: undefined): string;
  encodeFunctionData(functionFragment: "forward", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "isPetrified",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "balance", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isForwarder",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "ADD_PROTECTED_TOKEN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasInitialized",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERC1271_INTERFACE_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isValidSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERC1271_RETURN_INVALID_SIGNATURE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "TRANSFER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtectedTokensLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEVMScriptExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRecoveryVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "RUN_SCRIPT_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SAFE_EXECUTE_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "REMOVE_PROTECTED_TOKEN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "deposit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isDepositable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "presignHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DESIGNATE_SIGNER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeProtectedToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "EXECUTE_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addProtectedToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowRecoverability",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "appId", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "protectedTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitializationBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERC1271_RETURN_VALID_SIGNATURE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferToVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "canPerform", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getEVMScriptRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDesignatedSigner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "designatedSigner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeExecute",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PROTECTED_TOKENS_CAP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ADD_PRESIGNED_HASH_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isPresigned",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "execute", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "transfer", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "canForward", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "kernel", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "forward", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isPetrified",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "balance", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isForwarder",
    data: BytesLike
  ): Result;

  events: {
    "SafeExecute(address,address,bytes)": EventFragment;
    "Execute(address,address,uint256,bytes)": EventFragment;
    "AddProtectedToken(address)": EventFragment;
    "RemoveProtectedToken(address)": EventFragment;
    "PresignHash(address,bytes32)": EventFragment;
    "SetDesignatedSigner(address,address,address)": EventFragment;
    "ReceiveERC721(address,address,address,uint256,bytes)": EventFragment;
    "VaultTransfer(address,address,uint256)": EventFragment;
    "VaultDeposit(address,address,uint256)": EventFragment;
    "ScriptResult(address,bytes,bytes,bytes)": EventFragment;
    "RecoverToVault(address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "SafeExecute"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Execute"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddProtectedToken"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemoveProtectedToken"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PresignHash"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetDesignatedSigner"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReceiveERC721"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VaultTransfer"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VaultDeposit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ScriptResult"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoverToVault"): EventFragment;
}

export class Agent extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: AgentInterface;

  functions: {
    ADD_PROTECTED_TOKEN_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "ADD_PROTECTED_TOKEN_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    hasInitialized(overrides?: CallOverrides): Promise<[boolean]>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<[boolean]>;

    ERC1271_INTERFACE_ID(overrides?: CallOverrides): Promise<[string]>;

    "ERC1271_INTERFACE_ID()"(overrides?: CallOverrides): Promise<[string]>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "isValidSignature(bytes32,bytes)"(
      _hash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "isValidSignature(bytes,bytes)"(
      _data: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    ERC1271_RETURN_INVALID_SIGNATURE(
      overrides?: CallOverrides
    ): Promise<[string]>;

    "ERC1271_RETURN_INVALID_SIGNATURE()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    TRANSFER_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "TRANSFER_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    getProtectedTokensLength(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getProtectedTokensLength()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getRecoveryVault(overrides?: CallOverrides): Promise<[string]>;

    "getRecoveryVault()"(overrides?: CallOverrides): Promise<[string]>;

    RUN_SCRIPT_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "RUN_SCRIPT_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    SAFE_EXECUTE_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "SAFE_EXECUTE_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    REMOVE_PROTECTED_TOKEN_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "REMOVE_PROTECTED_TOKEN_ROLE()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    deposit(
      _token: string,
      _value: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "deposit(address,uint256)"(
      _token: string,
      _value: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    isDepositable(overrides?: CallOverrides): Promise<[boolean]>;

    "isDepositable()"(overrides?: CallOverrides): Promise<[boolean]>;

    presignHash(
      _hash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "presignHash(bytes32)"(
      _hash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    DESIGNATE_SIGNER_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "DESIGNATE_SIGNER_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    removeProtectedToken(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeProtectedToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    EXECUTE_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "EXECUTE_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    addProtectedToken(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addProtectedToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    allowRecoverability(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "allowRecoverability(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    appId(overrides?: CallOverrides): Promise<[string]>;

    "appId()"(overrides?: CallOverrides): Promise<[string]>;

    initialize(overrides?: Overrides): Promise<ContractTransaction>;

    "initialize()"(overrides?: Overrides): Promise<ContractTransaction>;

    protectedTokens(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "protectedTokens(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getInitializationBlock(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    ERC1271_RETURN_VALID_SIGNATURE(
      overrides?: CallOverrides
    ): Promise<[string]>;

    "ERC1271_RETURN_VALID_SIGNATURE()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    transferToVault(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferToVault(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getEVMScriptRegistry(overrides?: CallOverrides): Promise<[string]>;

    "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<[string]>;

    setDesignatedSigner(
      _designatedSigner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setDesignatedSigner(address)"(
      _designatedSigner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    designatedSigner(overrides?: CallOverrides): Promise<[string]>;

    "designatedSigner()"(overrides?: CallOverrides): Promise<[string]>;

    safeExecute(
      _target: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "safeExecute(address,bytes)"(
      _target: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    PROTECTED_TOKENS_CAP(overrides?: CallOverrides): Promise<[BigNumber]>;

    "PROTECTED_TOKENS_CAP()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    ADD_PRESIGNED_HASH_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "ADD_PRESIGNED_HASH_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    isPresigned(arg0: BytesLike, overrides?: CallOverrides): Promise<[boolean]>;

    "isPresigned(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    execute(
      _target: string,
      _ethValue: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "execute(address,uint256,bytes)"(
      _target: string,
      _ethValue: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transfer(
      _token: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transfer(address,address,uint256)"(
      _token: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    canForward(
      _sender: string,
      _evmScript: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "canForward(address,bytes)"(
      _sender: string,
      _evmScript: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    kernel(overrides?: CallOverrides): Promise<[string]>;

    "kernel()"(overrides?: CallOverrides): Promise<[string]>;

    forward(
      _evmScript: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "forward(bytes)"(
      _evmScript: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isPetrified(overrides?: CallOverrides): Promise<[boolean]>;

    "isPetrified()"(overrides?: CallOverrides): Promise<[boolean]>;

    balance(_token: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    "balance(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    isForwarder(overrides?: CallOverrides): Promise<[boolean]>;

    "isForwarder()"(overrides?: CallOverrides): Promise<[boolean]>;
  };

  ADD_PROTECTED_TOKEN_ROLE(overrides?: CallOverrides): Promise<string>;

  "ADD_PROTECTED_TOKEN_ROLE()"(overrides?: CallOverrides): Promise<string>;

  supportsInterface(
    _interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    _interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  hasInitialized(overrides?: CallOverrides): Promise<boolean>;

  "hasInitialized()"(overrides?: CallOverrides): Promise<boolean>;

  ERC1271_INTERFACE_ID(overrides?: CallOverrides): Promise<string>;

  "ERC1271_INTERFACE_ID()"(overrides?: CallOverrides): Promise<string>;

  onERC721Received(
    _operator: string,
    _from: string,
    _tokenId: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "onERC721Received(address,address,uint256,bytes)"(
    _operator: string,
    _from: string,
    _tokenId: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "isValidSignature(bytes32,bytes)"(
    _hash: BytesLike,
    _signature: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "isValidSignature(bytes,bytes)"(
    _data: BytesLike,
    _signature: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  ERC1271_RETURN_INVALID_SIGNATURE(overrides?: CallOverrides): Promise<string>;

  "ERC1271_RETURN_INVALID_SIGNATURE()"(
    overrides?: CallOverrides
  ): Promise<string>;

  TRANSFER_ROLE(overrides?: CallOverrides): Promise<string>;

  "TRANSFER_ROLE()"(overrides?: CallOverrides): Promise<string>;

  getProtectedTokensLength(overrides?: CallOverrides): Promise<BigNumber>;

  "getProtectedTokensLength()"(overrides?: CallOverrides): Promise<BigNumber>;

  getEVMScriptExecutor(
    _script: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "getEVMScriptExecutor(bytes)"(
    _script: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getRecoveryVault(overrides?: CallOverrides): Promise<string>;

  "getRecoveryVault()"(overrides?: CallOverrides): Promise<string>;

  RUN_SCRIPT_ROLE(overrides?: CallOverrides): Promise<string>;

  "RUN_SCRIPT_ROLE()"(overrides?: CallOverrides): Promise<string>;

  SAFE_EXECUTE_ROLE(overrides?: CallOverrides): Promise<string>;

  "SAFE_EXECUTE_ROLE()"(overrides?: CallOverrides): Promise<string>;

  REMOVE_PROTECTED_TOKEN_ROLE(overrides?: CallOverrides): Promise<string>;

  "REMOVE_PROTECTED_TOKEN_ROLE()"(overrides?: CallOverrides): Promise<string>;

  deposit(
    _token: string,
    _value: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "deposit(address,uint256)"(
    _token: string,
    _value: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  isDepositable(overrides?: CallOverrides): Promise<boolean>;

  "isDepositable()"(overrides?: CallOverrides): Promise<boolean>;

  presignHash(
    _hash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "presignHash(bytes32)"(
    _hash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  DESIGNATE_SIGNER_ROLE(overrides?: CallOverrides): Promise<string>;

  "DESIGNATE_SIGNER_ROLE()"(overrides?: CallOverrides): Promise<string>;

  removeProtectedToken(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeProtectedToken(address)"(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  EXECUTE_ROLE(overrides?: CallOverrides): Promise<string>;

  "EXECUTE_ROLE()"(overrides?: CallOverrides): Promise<string>;

  addProtectedToken(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addProtectedToken(address)"(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  allowRecoverability(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "allowRecoverability(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  appId(overrides?: CallOverrides): Promise<string>;

  "appId()"(overrides?: CallOverrides): Promise<string>;

  initialize(overrides?: Overrides): Promise<ContractTransaction>;

  "initialize()"(overrides?: Overrides): Promise<ContractTransaction>;

  protectedTokens(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "protectedTokens(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

  "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

  ERC1271_RETURN_VALID_SIGNATURE(overrides?: CallOverrides): Promise<string>;

  "ERC1271_RETURN_VALID_SIGNATURE()"(
    overrides?: CallOverrides
  ): Promise<string>;

  transferToVault(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferToVault(address)"(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  canPerform(
    _sender: string,
    _role: BytesLike,
    _params: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<boolean>;

  "canPerform(address,bytes32,uint256[])"(
    _sender: string,
    _role: BytesLike,
    _params: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<boolean>;

  getEVMScriptRegistry(overrides?: CallOverrides): Promise<string>;

  "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<string>;

  setDesignatedSigner(
    _designatedSigner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setDesignatedSigner(address)"(
    _designatedSigner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  designatedSigner(overrides?: CallOverrides): Promise<string>;

  "designatedSigner()"(overrides?: CallOverrides): Promise<string>;

  safeExecute(
    _target: string,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "safeExecute(address,bytes)"(
    _target: string,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  PROTECTED_TOKENS_CAP(overrides?: CallOverrides): Promise<BigNumber>;

  "PROTECTED_TOKENS_CAP()"(overrides?: CallOverrides): Promise<BigNumber>;

  ADD_PRESIGNED_HASH_ROLE(overrides?: CallOverrides): Promise<string>;

  "ADD_PRESIGNED_HASH_ROLE()"(overrides?: CallOverrides): Promise<string>;

  isPresigned(arg0: BytesLike, overrides?: CallOverrides): Promise<boolean>;

  "isPresigned(bytes32)"(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  execute(
    _target: string,
    _ethValue: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "execute(address,uint256,bytes)"(
    _target: string,
    _ethValue: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transfer(
    _token: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transfer(address,address,uint256)"(
    _token: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  canForward(
    _sender: string,
    _evmScript: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "canForward(address,bytes)"(
    _sender: string,
    _evmScript: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  kernel(overrides?: CallOverrides): Promise<string>;

  "kernel()"(overrides?: CallOverrides): Promise<string>;

  forward(
    _evmScript: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "forward(bytes)"(
    _evmScript: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isPetrified(overrides?: CallOverrides): Promise<boolean>;

  "isPetrified()"(overrides?: CallOverrides): Promise<boolean>;

  balance(_token: string, overrides?: CallOverrides): Promise<BigNumber>;

  "balance(address)"(
    _token: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  isForwarder(overrides?: CallOverrides): Promise<boolean>;

  "isForwarder()"(overrides?: CallOverrides): Promise<boolean>;

  callStatic: {
    ADD_PROTECTED_TOKEN_ROLE(overrides?: CallOverrides): Promise<string>;

    "ADD_PROTECTED_TOKEN_ROLE()"(overrides?: CallOverrides): Promise<string>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    hasInitialized(overrides?: CallOverrides): Promise<boolean>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<boolean>;

    ERC1271_INTERFACE_ID(overrides?: CallOverrides): Promise<string>;

    "ERC1271_INTERFACE_ID()"(overrides?: CallOverrides): Promise<string>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC721Received(address,address,uint256,bytes)"(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "isValidSignature(bytes32,bytes)"(
      _hash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "isValidSignature(bytes,bytes)"(
      _data: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    ERC1271_RETURN_INVALID_SIGNATURE(
      overrides?: CallOverrides
    ): Promise<string>;

    "ERC1271_RETURN_INVALID_SIGNATURE()"(
      overrides?: CallOverrides
    ): Promise<string>;

    TRANSFER_ROLE(overrides?: CallOverrides): Promise<string>;

    "TRANSFER_ROLE()"(overrides?: CallOverrides): Promise<string>;

    getProtectedTokensLength(overrides?: CallOverrides): Promise<BigNumber>;

    "getProtectedTokensLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getRecoveryVault(overrides?: CallOverrides): Promise<string>;

    "getRecoveryVault()"(overrides?: CallOverrides): Promise<string>;

    RUN_SCRIPT_ROLE(overrides?: CallOverrides): Promise<string>;

    "RUN_SCRIPT_ROLE()"(overrides?: CallOverrides): Promise<string>;

    SAFE_EXECUTE_ROLE(overrides?: CallOverrides): Promise<string>;

    "SAFE_EXECUTE_ROLE()"(overrides?: CallOverrides): Promise<string>;

    REMOVE_PROTECTED_TOKEN_ROLE(overrides?: CallOverrides): Promise<string>;

    "REMOVE_PROTECTED_TOKEN_ROLE()"(overrides?: CallOverrides): Promise<string>;

    deposit(
      _token: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "deposit(address,uint256)"(
      _token: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    isDepositable(overrides?: CallOverrides): Promise<boolean>;

    "isDepositable()"(overrides?: CallOverrides): Promise<boolean>;

    presignHash(_hash: BytesLike, overrides?: CallOverrides): Promise<void>;

    "presignHash(bytes32)"(
      _hash: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    DESIGNATE_SIGNER_ROLE(overrides?: CallOverrides): Promise<string>;

    "DESIGNATE_SIGNER_ROLE()"(overrides?: CallOverrides): Promise<string>;

    removeProtectedToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeProtectedToken(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    EXECUTE_ROLE(overrides?: CallOverrides): Promise<string>;

    "EXECUTE_ROLE()"(overrides?: CallOverrides): Promise<string>;

    addProtectedToken(_token: string, overrides?: CallOverrides): Promise<void>;

    "addProtectedToken(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    allowRecoverability(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "allowRecoverability(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    appId(overrides?: CallOverrides): Promise<string>;

    "appId()"(overrides?: CallOverrides): Promise<string>;

    initialize(overrides?: CallOverrides): Promise<void>;

    "initialize()"(overrides?: CallOverrides): Promise<void>;

    protectedTokens(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "protectedTokens(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    ERC1271_RETURN_VALID_SIGNATURE(overrides?: CallOverrides): Promise<string>;

    "ERC1271_RETURN_VALID_SIGNATURE()"(
      overrides?: CallOverrides
    ): Promise<string>;

    transferToVault(_token: string, overrides?: CallOverrides): Promise<void>;

    "transferToVault(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    getEVMScriptRegistry(overrides?: CallOverrides): Promise<string>;

    "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<string>;

    setDesignatedSigner(
      _designatedSigner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setDesignatedSigner(address)"(
      _designatedSigner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    designatedSigner(overrides?: CallOverrides): Promise<string>;

    "designatedSigner()"(overrides?: CallOverrides): Promise<string>;

    safeExecute(
      _target: string,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeExecute(address,bytes)"(
      _target: string,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    PROTECTED_TOKENS_CAP(overrides?: CallOverrides): Promise<BigNumber>;

    "PROTECTED_TOKENS_CAP()"(overrides?: CallOverrides): Promise<BigNumber>;

    ADD_PRESIGNED_HASH_ROLE(overrides?: CallOverrides): Promise<string>;

    "ADD_PRESIGNED_HASH_ROLE()"(overrides?: CallOverrides): Promise<string>;

    isPresigned(arg0: BytesLike, overrides?: CallOverrides): Promise<boolean>;

    "isPresigned(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    execute(
      _target: string,
      _ethValue: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "execute(address,uint256,bytes)"(
      _target: string,
      _ethValue: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    transfer(
      _token: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transfer(address,address,uint256)"(
      _token: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    canForward(
      _sender: string,
      _evmScript: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "canForward(address,bytes)"(
      _sender: string,
      _evmScript: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    kernel(overrides?: CallOverrides): Promise<string>;

    "kernel()"(overrides?: CallOverrides): Promise<string>;

    forward(_evmScript: BytesLike, overrides?: CallOverrides): Promise<void>;

    "forward(bytes)"(
      _evmScript: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    isPetrified(overrides?: CallOverrides): Promise<boolean>;

    "isPetrified()"(overrides?: CallOverrides): Promise<boolean>;

    balance(_token: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balance(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isForwarder(overrides?: CallOverrides): Promise<boolean>;

    "isForwarder()"(overrides?: CallOverrides): Promise<boolean>;
  };

  filters: {
    SafeExecute(
      sender: string | null,
      target: string | null,
      data: null
    ): EventFilter;

    Execute(
      sender: string | null,
      target: string | null,
      ethValue: null,
      data: null
    ): EventFilter;

    AddProtectedToken(token: string | null): EventFilter;

    RemoveProtectedToken(token: string | null): EventFilter;

    PresignHash(sender: string | null, hash: BytesLike | null): EventFilter;

    SetDesignatedSigner(
      sender: string | null,
      oldSigner: string | null,
      newSigner: string | null
    ): EventFilter;

    ReceiveERC721(
      token: string | null,
      operator: string | null,
      from: string | null,
      tokenId: null,
      data: null
    ): EventFilter;

    VaultTransfer(
      token: string | null,
      to: string | null,
      amount: null
    ): EventFilter;

    VaultDeposit(
      token: string | null,
      sender: string | null,
      amount: null
    ): EventFilter;

    ScriptResult(
      executor: string | null,
      script: null,
      input: null,
      returnData: null
    ): EventFilter;

    RecoverToVault(
      vault: string | null,
      token: string | null,
      amount: null
    ): EventFilter;
  };

  estimateGas: {
    ADD_PROTECTED_TOKEN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "ADD_PROTECTED_TOKEN_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasInitialized(overrides?: CallOverrides): Promise<BigNumber>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<BigNumber>;

    ERC1271_INTERFACE_ID(overrides?: CallOverrides): Promise<BigNumber>;

    "ERC1271_INTERFACE_ID()"(overrides?: CallOverrides): Promise<BigNumber>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "onERC721Received(address,address,uint256,bytes)"(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "isValidSignature(bytes32,bytes)"(
      _hash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isValidSignature(bytes,bytes)"(
      _data: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ERC1271_RETURN_INVALID_SIGNATURE(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ERC1271_RETURN_INVALID_SIGNATURE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    TRANSFER_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "TRANSFER_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    getProtectedTokensLength(overrides?: CallOverrides): Promise<BigNumber>;

    "getProtectedTokensLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRecoveryVault(overrides?: CallOverrides): Promise<BigNumber>;

    "getRecoveryVault()"(overrides?: CallOverrides): Promise<BigNumber>;

    RUN_SCRIPT_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "RUN_SCRIPT_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    SAFE_EXECUTE_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "SAFE_EXECUTE_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    REMOVE_PROTECTED_TOKEN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "REMOVE_PROTECTED_TOKEN_ROLE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    deposit(
      _token: string,
      _value: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "deposit(address,uint256)"(
      _token: string,
      _value: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    isDepositable(overrides?: CallOverrides): Promise<BigNumber>;

    "isDepositable()"(overrides?: CallOverrides): Promise<BigNumber>;

    presignHash(_hash: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "presignHash(bytes32)"(
      _hash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    DESIGNATE_SIGNER_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "DESIGNATE_SIGNER_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    removeProtectedToken(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeProtectedToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    EXECUTE_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "EXECUTE_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    addProtectedToken(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addProtectedToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    allowRecoverability(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowRecoverability(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    appId(overrides?: CallOverrides): Promise<BigNumber>;

    "appId()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(overrides?: Overrides): Promise<BigNumber>;

    "initialize()"(overrides?: Overrides): Promise<BigNumber>;

    protectedTokens(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "protectedTokens(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    ERC1271_RETURN_VALID_SIGNATURE(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ERC1271_RETURN_VALID_SIGNATURE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferToVault(_token: string, overrides?: Overrides): Promise<BigNumber>;

    "transferToVault(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getEVMScriptRegistry(overrides?: CallOverrides): Promise<BigNumber>;

    "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<BigNumber>;

    setDesignatedSigner(
      _designatedSigner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setDesignatedSigner(address)"(
      _designatedSigner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    designatedSigner(overrides?: CallOverrides): Promise<BigNumber>;

    "designatedSigner()"(overrides?: CallOverrides): Promise<BigNumber>;

    safeExecute(
      _target: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "safeExecute(address,bytes)"(
      _target: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    PROTECTED_TOKENS_CAP(overrides?: CallOverrides): Promise<BigNumber>;

    "PROTECTED_TOKENS_CAP()"(overrides?: CallOverrides): Promise<BigNumber>;

    ADD_PRESIGNED_HASH_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "ADD_PRESIGNED_HASH_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    isPresigned(arg0: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "isPresigned(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    execute(
      _target: string,
      _ethValue: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "execute(address,uint256,bytes)"(
      _target: string,
      _ethValue: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transfer(
      _token: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transfer(address,address,uint256)"(
      _token: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    canForward(
      _sender: string,
      _evmScript: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canForward(address,bytes)"(
      _sender: string,
      _evmScript: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    kernel(overrides?: CallOverrides): Promise<BigNumber>;

    "kernel()"(overrides?: CallOverrides): Promise<BigNumber>;

    forward(_evmScript: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "forward(bytes)"(
      _evmScript: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isPetrified(overrides?: CallOverrides): Promise<BigNumber>;

    "isPetrified()"(overrides?: CallOverrides): Promise<BigNumber>;

    balance(_token: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balance(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isForwarder(overrides?: CallOverrides): Promise<BigNumber>;

    "isForwarder()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    ADD_PROTECTED_TOKEN_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ADD_PROTECTED_TOKEN_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasInitialized(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "hasInitialized()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ERC1271_INTERFACE_ID(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ERC1271_INTERFACE_ID()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      _operator: string,
      _from: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "isValidSignature(bytes32,bytes)"(
      _hash: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isValidSignature(bytes,bytes)"(
      _data: BytesLike,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ERC1271_RETURN_INVALID_SIGNATURE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ERC1271_RETURN_INVALID_SIGNATURE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    TRANSFER_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "TRANSFER_ROLE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getProtectedTokensLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProtectedTokensLength()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRecoveryVault(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getRecoveryVault()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    RUN_SCRIPT_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "RUN_SCRIPT_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    SAFE_EXECUTE_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "SAFE_EXECUTE_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    REMOVE_PROTECTED_TOKEN_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "REMOVE_PROTECTED_TOKEN_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    deposit(
      _token: string,
      _value: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "deposit(address,uint256)"(
      _token: string,
      _value: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    isDepositable(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isDepositable()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    presignHash(
      _hash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "presignHash(bytes32)"(
      _hash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    DESIGNATE_SIGNER_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "DESIGNATE_SIGNER_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeProtectedToken(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeProtectedToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    EXECUTE_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "EXECUTE_ROLE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    addProtectedToken(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addProtectedToken(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    allowRecoverability(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allowRecoverability(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    appId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "appId()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initialize(overrides?: Overrides): Promise<PopulatedTransaction>;

    "initialize()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    protectedTokens(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "protectedTokens(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getInitializationBlock(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getInitializationBlock()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ERC1271_RETURN_VALID_SIGNATURE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ERC1271_RETURN_VALID_SIGNATURE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferToVault(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferToVault(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEVMScriptRegistry(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getEVMScriptRegistry()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setDesignatedSigner(
      _designatedSigner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setDesignatedSigner(address)"(
      _designatedSigner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    designatedSigner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "designatedSigner()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    safeExecute(
      _target: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "safeExecute(address,bytes)"(
      _target: string,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    PROTECTED_TOKENS_CAP(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "PROTECTED_TOKENS_CAP()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ADD_PRESIGNED_HASH_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ADD_PRESIGNED_HASH_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isPresigned(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isPresigned(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    execute(
      _target: string,
      _ethValue: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "execute(address,uint256,bytes)"(
      _target: string,
      _ethValue: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transfer(
      _token: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transfer(address,address,uint256)"(
      _token: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    canForward(
      _sender: string,
      _evmScript: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canForward(address,bytes)"(
      _sender: string,
      _evmScript: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    kernel(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "kernel()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    forward(
      _evmScript: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "forward(bytes)"(
      _evmScript: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isPetrified(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isPetrified()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    balance(
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balance(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isForwarder(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isForwarder()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
