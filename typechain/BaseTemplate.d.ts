/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import { Contract, ContractTransaction } from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface BaseTemplateInterface extends ethers.utils.Interface {
  functions: {};

  events: {
    "DeployDao(address)": EventFragment;
    "SetupDao(address)": EventFragment;
    "DeployToken(address)": EventFragment;
    "InstalledApp(address,bytes32)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DeployDao"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetupDao"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DeployToken"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "InstalledApp"): EventFragment;
}

export class BaseTemplate extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: BaseTemplateInterface;

  functions: {};

  callStatic: {};

  filters: {
    DeployDao(dao: null): EventFilter;

    SetupDao(dao: null): EventFilter;

    DeployToken(token: null): EventFilter;

    InstalledApp(appProxy: null, appId: null): EventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
