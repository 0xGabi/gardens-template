/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DisputableVotingInterface extends ethers.utils.Interface {
  functions: {
    "CHANGE_VOTE_TIME_ROLE()": FunctionFragment;
    "newVote(bytes,bytes)": FunctionFragment;
    "CHANGE_EXECUTION_DELAY_ROLE()": FunctionFragment;
    "CHANGE_SUPPORT_ROLE()": FunctionFragment;
    "CHANGE_DELEGATED_VOTING_PERIOD_ROLE()": FunctionFragment;
    "CHANGE_QUIET_ENDING_ROLE()": FunctionFragment;
    "CHALLENGE_ROLE()": FunctionFragment;
    "CHANGE_QUORUM_ROLE()": FunctionFragment;
    "initialize(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64)": FunctionFragment;
    "CREATE_VOTES_ROLE()": FunctionFragment;
    "SET_AGREEMENT_ROLE()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "CHANGE_VOTE_TIME_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "newVote",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "CHANGE_EXECUTION_DELAY_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CHANGE_SUPPORT_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CHANGE_DELEGATED_VOTING_PERIOD_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CHANGE_QUIET_ENDING_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CHALLENGE_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CHANGE_QUORUM_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "CREATE_VOTES_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SET_AGREEMENT_ROLE",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "CHANGE_VOTE_TIME_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "newVote", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "CHANGE_EXECUTION_DELAY_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CHANGE_SUPPORT_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CHANGE_DELEGATED_VOTING_PERIOD_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CHANGE_QUIET_ENDING_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CHALLENGE_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CHANGE_QUORUM_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "CREATE_VOTES_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SET_AGREEMENT_ROLE",
    data: BytesLike
  ): Result;

  events: {};
}

export class DisputableVoting extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DisputableVotingInterface;

  functions: {
    CHANGE_VOTE_TIME_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "CHANGE_VOTE_TIME_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    newVote(
      _executionScript: BytesLike,
      _context: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "newVote(bytes,bytes)"(
      _executionScript: BytesLike,
      _context: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    CHANGE_EXECUTION_DELAY_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "CHANGE_EXECUTION_DELAY_ROLE()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    CHANGE_SUPPORT_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "CHANGE_SUPPORT_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    CHANGE_DELEGATED_VOTING_PERIOD_ROLE(
      overrides?: CallOverrides
    ): Promise<[string]>;

    "CHANGE_DELEGATED_VOTING_PERIOD_ROLE()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    CHANGE_QUIET_ENDING_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "CHANGE_QUIET_ENDING_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    CHALLENGE_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "CHALLENGE_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    CHANGE_QUORUM_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "CHANGE_QUORUM_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    initialize(
      _token: string,
      _voteTime: BigNumberish,
      _supportRequiredPct: BigNumberish,
      _minAcceptQuorumPct: BigNumberish,
      _delegatedVotingPeriod: BigNumberish,
      _quietEndingPeriod: BigNumberish,
      _quietEndingExtension: BigNumberish,
      _executionDelay: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64)"(
      _token: string,
      _voteTime: BigNumberish,
      _supportRequiredPct: BigNumberish,
      _minAcceptQuorumPct: BigNumberish,
      _delegatedVotingPeriod: BigNumberish,
      _quietEndingPeriod: BigNumberish,
      _quietEndingExtension: BigNumberish,
      _executionDelay: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    CREATE_VOTES_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "CREATE_VOTES_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    SET_AGREEMENT_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "SET_AGREEMENT_ROLE()"(overrides?: CallOverrides): Promise<[string]>;
  };

  CHANGE_VOTE_TIME_ROLE(overrides?: CallOverrides): Promise<string>;

  "CHANGE_VOTE_TIME_ROLE()"(overrides?: CallOverrides): Promise<string>;

  newVote(
    _executionScript: BytesLike,
    _context: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "newVote(bytes,bytes)"(
    _executionScript: BytesLike,
    _context: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  CHANGE_EXECUTION_DELAY_ROLE(overrides?: CallOverrides): Promise<string>;

  "CHANGE_EXECUTION_DELAY_ROLE()"(overrides?: CallOverrides): Promise<string>;

  CHANGE_SUPPORT_ROLE(overrides?: CallOverrides): Promise<string>;

  "CHANGE_SUPPORT_ROLE()"(overrides?: CallOverrides): Promise<string>;

  CHANGE_DELEGATED_VOTING_PERIOD_ROLE(
    overrides?: CallOverrides
  ): Promise<string>;

  "CHANGE_DELEGATED_VOTING_PERIOD_ROLE()"(
    overrides?: CallOverrides
  ): Promise<string>;

  CHANGE_QUIET_ENDING_ROLE(overrides?: CallOverrides): Promise<string>;

  "CHANGE_QUIET_ENDING_ROLE()"(overrides?: CallOverrides): Promise<string>;

  CHALLENGE_ROLE(overrides?: CallOverrides): Promise<string>;

  "CHALLENGE_ROLE()"(overrides?: CallOverrides): Promise<string>;

  CHANGE_QUORUM_ROLE(overrides?: CallOverrides): Promise<string>;

  "CHANGE_QUORUM_ROLE()"(overrides?: CallOverrides): Promise<string>;

  initialize(
    _token: string,
    _voteTime: BigNumberish,
    _supportRequiredPct: BigNumberish,
    _minAcceptQuorumPct: BigNumberish,
    _delegatedVotingPeriod: BigNumberish,
    _quietEndingPeriod: BigNumberish,
    _quietEndingExtension: BigNumberish,
    _executionDelay: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64)"(
    _token: string,
    _voteTime: BigNumberish,
    _supportRequiredPct: BigNumberish,
    _minAcceptQuorumPct: BigNumberish,
    _delegatedVotingPeriod: BigNumberish,
    _quietEndingPeriod: BigNumberish,
    _quietEndingExtension: BigNumberish,
    _executionDelay: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  CREATE_VOTES_ROLE(overrides?: CallOverrides): Promise<string>;

  "CREATE_VOTES_ROLE()"(overrides?: CallOverrides): Promise<string>;

  SET_AGREEMENT_ROLE(overrides?: CallOverrides): Promise<string>;

  "SET_AGREEMENT_ROLE()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    CHANGE_VOTE_TIME_ROLE(overrides?: CallOverrides): Promise<string>;

    "CHANGE_VOTE_TIME_ROLE()"(overrides?: CallOverrides): Promise<string>;

    newVote(
      _executionScript: BytesLike,
      _context: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "newVote(bytes,bytes)"(
      _executionScript: BytesLike,
      _context: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    CHANGE_EXECUTION_DELAY_ROLE(overrides?: CallOverrides): Promise<string>;

    "CHANGE_EXECUTION_DELAY_ROLE()"(overrides?: CallOverrides): Promise<string>;

    CHANGE_SUPPORT_ROLE(overrides?: CallOverrides): Promise<string>;

    "CHANGE_SUPPORT_ROLE()"(overrides?: CallOverrides): Promise<string>;

    CHANGE_DELEGATED_VOTING_PERIOD_ROLE(
      overrides?: CallOverrides
    ): Promise<string>;

    "CHANGE_DELEGATED_VOTING_PERIOD_ROLE()"(
      overrides?: CallOverrides
    ): Promise<string>;

    CHANGE_QUIET_ENDING_ROLE(overrides?: CallOverrides): Promise<string>;

    "CHANGE_QUIET_ENDING_ROLE()"(overrides?: CallOverrides): Promise<string>;

    CHALLENGE_ROLE(overrides?: CallOverrides): Promise<string>;

    "CHALLENGE_ROLE()"(overrides?: CallOverrides): Promise<string>;

    CHANGE_QUORUM_ROLE(overrides?: CallOverrides): Promise<string>;

    "CHANGE_QUORUM_ROLE()"(overrides?: CallOverrides): Promise<string>;

    initialize(
      _token: string,
      _voteTime: BigNumberish,
      _supportRequiredPct: BigNumberish,
      _minAcceptQuorumPct: BigNumberish,
      _delegatedVotingPeriod: BigNumberish,
      _quietEndingPeriod: BigNumberish,
      _quietEndingExtension: BigNumberish,
      _executionDelay: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64)"(
      _token: string,
      _voteTime: BigNumberish,
      _supportRequiredPct: BigNumberish,
      _minAcceptQuorumPct: BigNumberish,
      _delegatedVotingPeriod: BigNumberish,
      _quietEndingPeriod: BigNumberish,
      _quietEndingExtension: BigNumberish,
      _executionDelay: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    CREATE_VOTES_ROLE(overrides?: CallOverrides): Promise<string>;

    "CREATE_VOTES_ROLE()"(overrides?: CallOverrides): Promise<string>;

    SET_AGREEMENT_ROLE(overrides?: CallOverrides): Promise<string>;

    "SET_AGREEMENT_ROLE()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    CHANGE_VOTE_TIME_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "CHANGE_VOTE_TIME_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    newVote(
      _executionScript: BytesLike,
      _context: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "newVote(bytes,bytes)"(
      _executionScript: BytesLike,
      _context: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    CHANGE_EXECUTION_DELAY_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "CHANGE_EXECUTION_DELAY_ROLE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    CHANGE_SUPPORT_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "CHANGE_SUPPORT_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    CHANGE_DELEGATED_VOTING_PERIOD_ROLE(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "CHANGE_DELEGATED_VOTING_PERIOD_ROLE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    CHANGE_QUIET_ENDING_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "CHANGE_QUIET_ENDING_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    CHALLENGE_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "CHALLENGE_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    CHANGE_QUORUM_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "CHANGE_QUORUM_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _token: string,
      _voteTime: BigNumberish,
      _supportRequiredPct: BigNumberish,
      _minAcceptQuorumPct: BigNumberish,
      _delegatedVotingPeriod: BigNumberish,
      _quietEndingPeriod: BigNumberish,
      _quietEndingExtension: BigNumberish,
      _executionDelay: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64)"(
      _token: string,
      _voteTime: BigNumberish,
      _supportRequiredPct: BigNumberish,
      _minAcceptQuorumPct: BigNumberish,
      _delegatedVotingPeriod: BigNumberish,
      _quietEndingPeriod: BigNumberish,
      _quietEndingExtension: BigNumberish,
      _executionDelay: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    CREATE_VOTES_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "CREATE_VOTES_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    SET_AGREEMENT_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "SET_AGREEMENT_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    CHANGE_VOTE_TIME_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "CHANGE_VOTE_TIME_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    newVote(
      _executionScript: BytesLike,
      _context: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "newVote(bytes,bytes)"(
      _executionScript: BytesLike,
      _context: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    CHANGE_EXECUTION_DELAY_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "CHANGE_EXECUTION_DELAY_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    CHANGE_SUPPORT_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "CHANGE_SUPPORT_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    CHANGE_DELEGATED_VOTING_PERIOD_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "CHANGE_DELEGATED_VOTING_PERIOD_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    CHANGE_QUIET_ENDING_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "CHANGE_QUIET_ENDING_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    CHALLENGE_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "CHALLENGE_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    CHANGE_QUORUM_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "CHANGE_QUORUM_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _token: string,
      _voteTime: BigNumberish,
      _supportRequiredPct: BigNumberish,
      _minAcceptQuorumPct: BigNumberish,
      _delegatedVotingPeriod: BigNumberish,
      _quietEndingPeriod: BigNumberish,
      _quietEndingExtension: BigNumberish,
      _executionDelay: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64)"(
      _token: string,
      _voteTime: BigNumberish,
      _supportRequiredPct: BigNumberish,
      _minAcceptQuorumPct: BigNumberish,
      _delegatedVotingPeriod: BigNumberish,
      _quietEndingPeriod: BigNumberish,
      _quietEndingExtension: BigNumberish,
      _executionDelay: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    CREATE_VOTES_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "CREATE_VOTES_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    SET_AGREEMENT_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "SET_AGREEMENT_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
