/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface PublicResolverInterface extends ethers.utils.Interface {
  functions: {
    "supportsInterface(bytes4)": FunctionFragment;
    "setText(bytes32,string,string)": FunctionFragment;
    "ABI(bytes32,uint256)": FunctionFragment;
    "setPubkey(bytes32,bytes32,bytes32)": FunctionFragment;
    "content(bytes32)": FunctionFragment;
    "addr(bytes32)": FunctionFragment;
    "text(bytes32,string)": FunctionFragment;
    "setABI(bytes32,uint256,bytes)": FunctionFragment;
    "name(bytes32)": FunctionFragment;
    "setName(bytes32,string)": FunctionFragment;
    "setContent(bytes32,bytes32)": FunctionFragment;
    "pubkey(bytes32)": FunctionFragment;
    "setAddr(bytes32,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setText",
    values: [BytesLike, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "ABI",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setPubkey",
    values: [BytesLike, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "content", values: [BytesLike]): string;
  encodeFunctionData(functionFragment: "addr", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "text",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setABI",
    values: [BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "name", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "setName",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setContent",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "pubkey", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "setAddr",
    values: [BytesLike, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setText", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ABI", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setPubkey", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "content", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "addr", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "text", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setABI", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setName", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setContent", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pubkey", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setAddr", data: BytesLike): Result;

  events: {
    "AddrChanged(bytes32,address)": EventFragment;
    "ContentChanged(bytes32,bytes32)": EventFragment;
    "NameChanged(bytes32,string)": EventFragment;
    "ABIChanged(bytes32,uint256)": EventFragment;
    "PubkeyChanged(bytes32,bytes32,bytes32)": EventFragment;
    "TextChanged(bytes32,string,string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AddrChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ContentChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NameChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ABIChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PubkeyChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TextChanged"): EventFragment;
}

export class PublicResolver extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: PublicResolverInterface;

  functions: {
    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    setText(
      node: BytesLike,
      key: string,
      value: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setText(bytes32,string,string)"(
      node: BytesLike,
      key: string,
      value: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ABI(
      node: BytesLike,
      contentTypes: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string] & { contentType: BigNumber; data: string }>;

    "ABI(bytes32,uint256)"(
      node: BytesLike,
      contentTypes: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string] & { contentType: BigNumber; data: string }>;

    setPubkey(
      node: BytesLike,
      x: BytesLike,
      y: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPubkey(bytes32,bytes32,bytes32)"(
      node: BytesLike,
      x: BytesLike,
      y: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    content(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { ret: string }>;

    "content(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { ret: string }>;

    addr(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { ret: string }>;

    "addr(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { ret: string }>;

    text(
      node: BytesLike,
      key: string,
      overrides?: CallOverrides
    ): Promise<[string] & { ret: string }>;

    "text(bytes32,string)"(
      node: BytesLike,
      key: string,
      overrides?: CallOverrides
    ): Promise<[string] & { ret: string }>;

    setABI(
      node: BytesLike,
      contentType: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setABI(bytes32,uint256,bytes)"(
      node: BytesLike,
      contentType: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    name(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { ret: string }>;

    "name(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { ret: string }>;

    setName(
      node: BytesLike,
      name: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setName(bytes32,string)"(
      node: BytesLike,
      name: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setContent(
      node: BytesLike,
      hash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setContent(bytes32,bytes32)"(
      node: BytesLike,
      hash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    pubkey(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, string] & { x: string; y: string }>;

    "pubkey(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, string] & { x: string; y: string }>;

    setAddr(
      node: BytesLike,
      addr: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAddr(bytes32,address)"(
      node: BytesLike,
      addr: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  supportsInterface(
    interfaceID: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceID: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  setText(
    node: BytesLike,
    key: string,
    value: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setText(bytes32,string,string)"(
    node: BytesLike,
    key: string,
    value: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  ABI(
    node: BytesLike,
    contentTypes: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, string] & { contentType: BigNumber; data: string }>;

  "ABI(bytes32,uint256)"(
    node: BytesLike,
    contentTypes: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, string] & { contentType: BigNumber; data: string }>;

  setPubkey(
    node: BytesLike,
    x: BytesLike,
    y: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPubkey(bytes32,bytes32,bytes32)"(
    node: BytesLike,
    x: BytesLike,
    y: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  content(node: BytesLike, overrides?: CallOverrides): Promise<string>;

  "content(bytes32)"(
    node: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  addr(node: BytesLike, overrides?: CallOverrides): Promise<string>;

  "addr(bytes32)"(node: BytesLike, overrides?: CallOverrides): Promise<string>;

  text(
    node: BytesLike,
    key: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "text(bytes32,string)"(
    node: BytesLike,
    key: string,
    overrides?: CallOverrides
  ): Promise<string>;

  setABI(
    node: BytesLike,
    contentType: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setABI(bytes32,uint256,bytes)"(
    node: BytesLike,
    contentType: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  name(node: BytesLike, overrides?: CallOverrides): Promise<string>;

  "name(bytes32)"(node: BytesLike, overrides?: CallOverrides): Promise<string>;

  setName(
    node: BytesLike,
    name: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setName(bytes32,string)"(
    node: BytesLike,
    name: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setContent(
    node: BytesLike,
    hash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setContent(bytes32,bytes32)"(
    node: BytesLike,
    hash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  pubkey(
    node: BytesLike,
    overrides?: CallOverrides
  ): Promise<[string, string] & { x: string; y: string }>;

  "pubkey(bytes32)"(
    node: BytesLike,
    overrides?: CallOverrides
  ): Promise<[string, string] & { x: string; y: string }>;

  setAddr(
    node: BytesLike,
    addr: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAddr(bytes32,address)"(
    node: BytesLike,
    addr: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setText(
      node: BytesLike,
      key: string,
      value: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setText(bytes32,string,string)"(
      node: BytesLike,
      key: string,
      value: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ABI(
      node: BytesLike,
      contentTypes: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string] & { contentType: BigNumber; data: string }>;

    "ABI(bytes32,uint256)"(
      node: BytesLike,
      contentTypes: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string] & { contentType: BigNumber; data: string }>;

    setPubkey(
      node: BytesLike,
      x: BytesLike,
      y: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPubkey(bytes32,bytes32,bytes32)"(
      node: BytesLike,
      x: BytesLike,
      y: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    content(node: BytesLike, overrides?: CallOverrides): Promise<string>;

    "content(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    addr(node: BytesLike, overrides?: CallOverrides): Promise<string>;

    "addr(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    text(
      node: BytesLike,
      key: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "text(bytes32,string)"(
      node: BytesLike,
      key: string,
      overrides?: CallOverrides
    ): Promise<string>;

    setABI(
      node: BytesLike,
      contentType: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setABI(bytes32,uint256,bytes)"(
      node: BytesLike,
      contentType: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    name(node: BytesLike, overrides?: CallOverrides): Promise<string>;

    "name(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    setName(
      node: BytesLike,
      name: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setName(bytes32,string)"(
      node: BytesLike,
      name: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setContent(
      node: BytesLike,
      hash: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setContent(bytes32,bytes32)"(
      node: BytesLike,
      hash: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    pubkey(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, string] & { x: string; y: string }>;

    "pubkey(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, string] & { x: string; y: string }>;

    setAddr(
      node: BytesLike,
      addr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAddr(bytes32,address)"(
      node: BytesLike,
      addr: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    AddrChanged(node: BytesLike | null, a: null): EventFilter;

    ContentChanged(node: BytesLike | null, hash: null): EventFilter;

    NameChanged(node: BytesLike | null, name: null): EventFilter;

    ABIChanged(
      node: BytesLike | null,
      contentType: BigNumberish | null
    ): EventFilter;

    PubkeyChanged(node: BytesLike | null, x: null, y: null): EventFilter;

    TextChanged(
      node: BytesLike | null,
      indexedKey: string | null,
      key: null
    ): EventFilter;
  };

  estimateGas: {
    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setText(
      node: BytesLike,
      key: string,
      value: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setText(bytes32,string,string)"(
      node: BytesLike,
      key: string,
      value: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    ABI(
      node: BytesLike,
      contentTypes: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ABI(bytes32,uint256)"(
      node: BytesLike,
      contentTypes: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setPubkey(
      node: BytesLike,
      x: BytesLike,
      y: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPubkey(bytes32,bytes32,bytes32)"(
      node: BytesLike,
      x: BytesLike,
      y: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    content(node: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "content(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    addr(node: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "addr(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    text(
      node: BytesLike,
      key: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "text(bytes32,string)"(
      node: BytesLike,
      key: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setABI(
      node: BytesLike,
      contentType: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setABI(bytes32,uint256,bytes)"(
      node: BytesLike,
      contentType: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    name(node: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "name(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setName(
      node: BytesLike,
      name: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setName(bytes32,string)"(
      node: BytesLike,
      name: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setContent(
      node: BytesLike,
      hash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setContent(bytes32,bytes32)"(
      node: BytesLike,
      hash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    pubkey(node: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "pubkey(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setAddr(
      node: BytesLike,
      addr: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAddr(bytes32,address)"(
      node: BytesLike,
      addr: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setText(
      node: BytesLike,
      key: string,
      value: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setText(bytes32,string,string)"(
      node: BytesLike,
      key: string,
      value: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ABI(
      node: BytesLike,
      contentTypes: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ABI(bytes32,uint256)"(
      node: BytesLike,
      contentTypes: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setPubkey(
      node: BytesLike,
      x: BytesLike,
      y: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPubkey(bytes32,bytes32,bytes32)"(
      node: BytesLike,
      x: BytesLike,
      y: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    content(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "content(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addr(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "addr(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    text(
      node: BytesLike,
      key: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "text(bytes32,string)"(
      node: BytesLike,
      key: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setABI(
      node: BytesLike,
      contentType: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setABI(bytes32,uint256,bytes)"(
      node: BytesLike,
      contentType: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    name(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "name(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setName(
      node: BytesLike,
      name: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setName(bytes32,string)"(
      node: BytesLike,
      name: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setContent(
      node: BytesLike,
      hash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setContent(bytes32,bytes32)"(
      node: BytesLike,
      hash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    pubkey(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pubkey(bytes32)"(
      node: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setAddr(
      node: BytesLike,
      addr: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAddr(bytes32,address)"(
      node: BytesLike,
      addr: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
