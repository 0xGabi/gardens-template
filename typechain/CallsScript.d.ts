/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface CallsScriptInterface extends ethers.utils.Interface {
  functions: {
    "hasInitialized()": FunctionFragment;
    "execScript(bytes,bytes,address[])": FunctionFragment;
    "executorType()": FunctionFragment;
    "getInitializationBlock()": FunctionFragment;
    "isPetrified()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "hasInitialized",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "execScript",
    values: [BytesLike, BytesLike, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "executorType",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getInitializationBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isPetrified",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "hasInitialized",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "execScript", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "executorType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitializationBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isPetrified",
    data: BytesLike
  ): Result;

  events: {
    "LogScriptCall(address,address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "LogScriptCall"): EventFragment;
}

export class CallsScript extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: CallsScriptInterface;

  functions: {
    hasInitialized(overrides?: CallOverrides): Promise<[boolean]>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<[boolean]>;

    execScript(
      _script: BytesLike,
      arg1: BytesLike,
      _blacklist: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "execScript(bytes,bytes,address[])"(
      _script: BytesLike,
      arg1: BytesLike,
      _blacklist: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    executorType(overrides?: CallOverrides): Promise<[string]>;

    "executorType()"(overrides?: CallOverrides): Promise<[string]>;

    getInitializationBlock(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    isPetrified(overrides?: CallOverrides): Promise<[boolean]>;

    "isPetrified()"(overrides?: CallOverrides): Promise<[boolean]>;
  };

  hasInitialized(overrides?: CallOverrides): Promise<boolean>;

  "hasInitialized()"(overrides?: CallOverrides): Promise<boolean>;

  execScript(
    _script: BytesLike,
    arg1: BytesLike,
    _blacklist: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "execScript(bytes,bytes,address[])"(
    _script: BytesLike,
    arg1: BytesLike,
    _blacklist: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  executorType(overrides?: CallOverrides): Promise<string>;

  "executorType()"(overrides?: CallOverrides): Promise<string>;

  getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

  "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

  isPetrified(overrides?: CallOverrides): Promise<boolean>;

  "isPetrified()"(overrides?: CallOverrides): Promise<boolean>;

  callStatic: {
    hasInitialized(overrides?: CallOverrides): Promise<boolean>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<boolean>;

    execScript(
      _script: BytesLike,
      arg1: BytesLike,
      _blacklist: string[],
      overrides?: CallOverrides
    ): Promise<string>;

    "execScript(bytes,bytes,address[])"(
      _script: BytesLike,
      arg1: BytesLike,
      _blacklist: string[],
      overrides?: CallOverrides
    ): Promise<string>;

    executorType(overrides?: CallOverrides): Promise<string>;

    "executorType()"(overrides?: CallOverrides): Promise<string>;

    getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    isPetrified(overrides?: CallOverrides): Promise<boolean>;

    "isPetrified()"(overrides?: CallOverrides): Promise<boolean>;
  };

  filters: {
    LogScriptCall(
      sender: string | null,
      src: string | null,
      dst: string | null
    ): EventFilter;
  };

  estimateGas: {
    hasInitialized(overrides?: CallOverrides): Promise<BigNumber>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<BigNumber>;

    execScript(
      _script: BytesLike,
      arg1: BytesLike,
      _blacklist: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "execScript(bytes,bytes,address[])"(
      _script: BytesLike,
      arg1: BytesLike,
      _blacklist: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    executorType(overrides?: CallOverrides): Promise<BigNumber>;

    "executorType()"(overrides?: CallOverrides): Promise<BigNumber>;

    getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    isPetrified(overrides?: CallOverrides): Promise<BigNumber>;

    "isPetrified()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    hasInitialized(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "hasInitialized()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    execScript(
      _script: BytesLike,
      arg1: BytesLike,
      _blacklist: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "execScript(bytes,bytes,address[])"(
      _script: BytesLike,
      arg1: BytesLike,
      _blacklist: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    executorType(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "executorType()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getInitializationBlock(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getInitializationBlock()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isPetrified(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isPetrified()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
