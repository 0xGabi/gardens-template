/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface EVMScriptRegistryInterface extends ethers.utils.Interface {
  functions: {
    "getScriptExecutor(bytes)": FunctionFragment;
    "hasInitialized()": FunctionFragment;
    "REGISTRY_ADD_EXECUTOR_ROLE()": FunctionFragment;
    "getEVMScriptExecutor(bytes)": FunctionFragment;
    "getRecoveryVault()": FunctionFragment;
    "disableScriptExecutor(uint256)": FunctionFragment;
    "allowRecoverability(address)": FunctionFragment;
    "appId()": FunctionFragment;
    "initialize()": FunctionFragment;
    "addScriptExecutor(address)": FunctionFragment;
    "getInitializationBlock()": FunctionFragment;
    "transferToVault(address)": FunctionFragment;
    "canPerform(address,bytes32,uint256[])": FunctionFragment;
    "getEVMScriptRegistry()": FunctionFragment;
    "REGISTRY_MANAGER_ROLE()": FunctionFragment;
    "enableScriptExecutor(uint256)": FunctionFragment;
    "kernel()": FunctionFragment;
    "isPetrified()": FunctionFragment;
    "executors(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getScriptExecutor",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasInitialized",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "REGISTRY_ADD_EXECUTOR_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEVMScriptExecutor",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRecoveryVault",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "disableScriptExecutor",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "allowRecoverability",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "appId", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addScriptExecutor",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getInitializationBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferToVault",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "canPerform",
    values: [string, BytesLike, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getEVMScriptRegistry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "REGISTRY_MANAGER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "enableScriptExecutor",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "kernel", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "isPetrified",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "executors",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "getScriptExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasInitialized",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "REGISTRY_ADD_EXECUTOR_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEVMScriptExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRecoveryVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableScriptExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowRecoverability",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "appId", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addScriptExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitializationBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferToVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "canPerform", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getEVMScriptRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "REGISTRY_MANAGER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableScriptExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "kernel", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isPetrified",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "executors", data: BytesLike): Result;

  events: {
    "EnableExecutor(uint256,address)": EventFragment;
    "DisableExecutor(uint256,address)": EventFragment;
    "ScriptResult(address,bytes,bytes,bytes)": EventFragment;
    "RecoverToVault(address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "EnableExecutor"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DisableExecutor"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ScriptResult"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoverToVault"): EventFragment;
}

export class EVMScriptRegistry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: EVMScriptRegistryInterface;

  functions: {
    getScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    hasInitialized(overrides?: CallOverrides): Promise<[boolean]>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<[boolean]>;

    REGISTRY_ADD_EXECUTOR_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "REGISTRY_ADD_EXECUTOR_ROLE()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getRecoveryVault(overrides?: CallOverrides): Promise<[string]>;

    "getRecoveryVault()"(overrides?: CallOverrides): Promise<[string]>;

    disableScriptExecutor(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "disableScriptExecutor(uint256)"(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    allowRecoverability(
      token: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "allowRecoverability(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    appId(overrides?: CallOverrides): Promise<[string]>;

    "appId()"(overrides?: CallOverrides): Promise<[string]>;

    initialize(overrides?: Overrides): Promise<ContractTransaction>;

    "initialize()"(overrides?: Overrides): Promise<ContractTransaction>;

    addScriptExecutor(
      _executor: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addScriptExecutor(address)"(
      _executor: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getInitializationBlock(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    transferToVault(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferToVault(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getEVMScriptRegistry(overrides?: CallOverrides): Promise<[string]>;

    "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<[string]>;

    REGISTRY_MANAGER_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "REGISTRY_MANAGER_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    enableScriptExecutor(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "enableScriptExecutor(uint256)"(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    kernel(overrides?: CallOverrides): Promise<[string]>;

    "kernel()"(overrides?: CallOverrides): Promise<[string]>;

    isPetrified(overrides?: CallOverrides): Promise<[boolean]>;

    "isPetrified()"(overrides?: CallOverrides): Promise<[boolean]>;

    executors(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { executor: string; enabled: boolean }>;

    "executors(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { executor: string; enabled: boolean }>;
  };

  getScriptExecutor(
    _script: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "getScriptExecutor(bytes)"(
    _script: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  hasInitialized(overrides?: CallOverrides): Promise<boolean>;

  "hasInitialized()"(overrides?: CallOverrides): Promise<boolean>;

  REGISTRY_ADD_EXECUTOR_ROLE(overrides?: CallOverrides): Promise<string>;

  "REGISTRY_ADD_EXECUTOR_ROLE()"(overrides?: CallOverrides): Promise<string>;

  getEVMScriptExecutor(
    _script: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "getEVMScriptExecutor(bytes)"(
    _script: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getRecoveryVault(overrides?: CallOverrides): Promise<string>;

  "getRecoveryVault()"(overrides?: CallOverrides): Promise<string>;

  disableScriptExecutor(
    _executorId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "disableScriptExecutor(uint256)"(
    _executorId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  allowRecoverability(
    token: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "allowRecoverability(address)"(
    token: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  appId(overrides?: CallOverrides): Promise<string>;

  "appId()"(overrides?: CallOverrides): Promise<string>;

  initialize(overrides?: Overrides): Promise<ContractTransaction>;

  "initialize()"(overrides?: Overrides): Promise<ContractTransaction>;

  addScriptExecutor(
    _executor: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addScriptExecutor(address)"(
    _executor: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

  "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

  transferToVault(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferToVault(address)"(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  canPerform(
    _sender: string,
    _role: BytesLike,
    _params: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<boolean>;

  "canPerform(address,bytes32,uint256[])"(
    _sender: string,
    _role: BytesLike,
    _params: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<boolean>;

  getEVMScriptRegistry(overrides?: CallOverrides): Promise<string>;

  "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<string>;

  REGISTRY_MANAGER_ROLE(overrides?: CallOverrides): Promise<string>;

  "REGISTRY_MANAGER_ROLE()"(overrides?: CallOverrides): Promise<string>;

  enableScriptExecutor(
    _executorId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "enableScriptExecutor(uint256)"(
    _executorId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  kernel(overrides?: CallOverrides): Promise<string>;

  "kernel()"(overrides?: CallOverrides): Promise<string>;

  isPetrified(overrides?: CallOverrides): Promise<boolean>;

  "isPetrified()"(overrides?: CallOverrides): Promise<boolean>;

  executors(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, boolean] & { executor: string; enabled: boolean }>;

  "executors(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, boolean] & { executor: string; enabled: boolean }>;

  callStatic: {
    getScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "getScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    hasInitialized(overrides?: CallOverrides): Promise<boolean>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<boolean>;

    REGISTRY_ADD_EXECUTOR_ROLE(overrides?: CallOverrides): Promise<string>;

    "REGISTRY_ADD_EXECUTOR_ROLE()"(overrides?: CallOverrides): Promise<string>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getRecoveryVault(overrides?: CallOverrides): Promise<string>;

    "getRecoveryVault()"(overrides?: CallOverrides): Promise<string>;

    disableScriptExecutor(
      _executorId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "disableScriptExecutor(uint256)"(
      _executorId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    allowRecoverability(
      token: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "allowRecoverability(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    appId(overrides?: CallOverrides): Promise<string>;

    "appId()"(overrides?: CallOverrides): Promise<string>;

    initialize(overrides?: CallOverrides): Promise<void>;

    "initialize()"(overrides?: CallOverrides): Promise<void>;

    addScriptExecutor(
      _executor: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "addScriptExecutor(address)"(
      _executor: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferToVault(_token: string, overrides?: CallOverrides): Promise<void>;

    "transferToVault(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    getEVMScriptRegistry(overrides?: CallOverrides): Promise<string>;

    "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<string>;

    REGISTRY_MANAGER_ROLE(overrides?: CallOverrides): Promise<string>;

    "REGISTRY_MANAGER_ROLE()"(overrides?: CallOverrides): Promise<string>;

    enableScriptExecutor(
      _executorId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "enableScriptExecutor(uint256)"(
      _executorId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    kernel(overrides?: CallOverrides): Promise<string>;

    "kernel()"(overrides?: CallOverrides): Promise<string>;

    isPetrified(overrides?: CallOverrides): Promise<boolean>;

    "isPetrified()"(overrides?: CallOverrides): Promise<boolean>;

    executors(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { executor: string; enabled: boolean }>;

    "executors(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { executor: string; enabled: boolean }>;
  };

  filters: {
    EnableExecutor(
      executorId: BigNumberish | null,
      executorAddress: string | null
    ): EventFilter;

    DisableExecutor(
      executorId: BigNumberish | null,
      executorAddress: string | null
    ): EventFilter;

    ScriptResult(
      executor: string | null,
      script: null,
      input: null,
      returnData: null
    ): EventFilter;

    RecoverToVault(
      vault: string | null,
      token: string | null,
      amount: null
    ): EventFilter;
  };

  estimateGas: {
    getScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasInitialized(overrides?: CallOverrides): Promise<BigNumber>;

    "hasInitialized()"(overrides?: CallOverrides): Promise<BigNumber>;

    REGISTRY_ADD_EXECUTOR_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "REGISTRY_ADD_EXECUTOR_ROLE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRecoveryVault(overrides?: CallOverrides): Promise<BigNumber>;

    "getRecoveryVault()"(overrides?: CallOverrides): Promise<BigNumber>;

    disableScriptExecutor(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "disableScriptExecutor(uint256)"(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    allowRecoverability(
      token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowRecoverability(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    appId(overrides?: CallOverrides): Promise<BigNumber>;

    "appId()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(overrides?: Overrides): Promise<BigNumber>;

    "initialize()"(overrides?: Overrides): Promise<BigNumber>;

    addScriptExecutor(
      _executor: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addScriptExecutor(address)"(
      _executor: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getInitializationBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "getInitializationBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferToVault(_token: string, overrides?: Overrides): Promise<BigNumber>;

    "transferToVault(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getEVMScriptRegistry(overrides?: CallOverrides): Promise<BigNumber>;

    "getEVMScriptRegistry()"(overrides?: CallOverrides): Promise<BigNumber>;

    REGISTRY_MANAGER_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "REGISTRY_MANAGER_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    enableScriptExecutor(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "enableScriptExecutor(uint256)"(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    kernel(overrides?: CallOverrides): Promise<BigNumber>;

    "kernel()"(overrides?: CallOverrides): Promise<BigNumber>;

    isPetrified(overrides?: CallOverrides): Promise<BigNumber>;

    "isPetrified()"(overrides?: CallOverrides): Promise<BigNumber>;

    executors(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "executors(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasInitialized(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "hasInitialized()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    REGISTRY_ADD_EXECUTOR_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "REGISTRY_ADD_EXECUTOR_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEVMScriptExecutor(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getEVMScriptExecutor(bytes)"(
      _script: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRecoveryVault(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getRecoveryVault()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    disableScriptExecutor(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "disableScriptExecutor(uint256)"(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    allowRecoverability(
      token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allowRecoverability(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    appId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "appId()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initialize(overrides?: Overrides): Promise<PopulatedTransaction>;

    "initialize()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    addScriptExecutor(
      _executor: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addScriptExecutor(address)"(
      _executor: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getInitializationBlock(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getInitializationBlock()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferToVault(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferToVault(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    canPerform(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canPerform(address,bytes32,uint256[])"(
      _sender: string,
      _role: BytesLike,
      _params: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEVMScriptRegistry(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getEVMScriptRegistry()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    REGISTRY_MANAGER_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "REGISTRY_MANAGER_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    enableScriptExecutor(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "enableScriptExecutor(uint256)"(
      _executorId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    kernel(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "kernel()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isPetrified(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isPetrified()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    executors(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "executors(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
