/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface AppProxyFactoryInterface extends ethers.utils.Interface {
  functions: {
    "newAppProxyPinned(address,bytes32,bytes)": FunctionFragment;
    "newAppProxy(address,bytes32)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "newAppProxyPinned",
    values: [string, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "newAppProxy",
    values: [string, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "newAppProxyPinned",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "newAppProxy",
    data: BytesLike
  ): Result;

  events: {
    "NewAppProxy(address,bool,bytes32)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "NewAppProxy"): EventFragment;
}

export class AppProxyFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: AppProxyFactoryInterface;

  functions: {
    "newAppProxyPinned(address,bytes32,bytes)"(
      _kernel: string,
      _appId: BytesLike,
      _initializePayload: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "newAppProxyPinned(address,bytes32)"(
      _kernel: string,
      _appId: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "newAppProxy(address,bytes32)"(
      _kernel: string,
      _appId: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "newAppProxy(address,bytes32,bytes)"(
      _kernel: string,
      _appId: BytesLike,
      _initializePayload: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  "newAppProxyPinned(address,bytes32,bytes)"(
    _kernel: string,
    _appId: BytesLike,
    _initializePayload: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "newAppProxyPinned(address,bytes32)"(
    _kernel: string,
    _appId: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "newAppProxy(address,bytes32)"(
    _kernel: string,
    _appId: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "newAppProxy(address,bytes32,bytes)"(
    _kernel: string,
    _appId: BytesLike,
    _initializePayload: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    "newAppProxyPinned(address,bytes32,bytes)"(
      _kernel: string,
      _appId: BytesLike,
      _initializePayload: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "newAppProxyPinned(address,bytes32)"(
      _kernel: string,
      _appId: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "newAppProxy(address,bytes32)"(
      _kernel: string,
      _appId: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "newAppProxy(address,bytes32,bytes)"(
      _kernel: string,
      _appId: BytesLike,
      _initializePayload: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    NewAppProxy(proxy: null, isUpgradeable: null, appId: null): EventFilter;
  };

  estimateGas: {
    "newAppProxyPinned(address,bytes32,bytes)"(
      _kernel: string,
      _appId: BytesLike,
      _initializePayload: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "newAppProxyPinned(address,bytes32)"(
      _kernel: string,
      _appId: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "newAppProxy(address,bytes32)"(
      _kernel: string,
      _appId: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "newAppProxy(address,bytes32,bytes)"(
      _kernel: string,
      _appId: BytesLike,
      _initializePayload: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    "newAppProxyPinned(address,bytes32,bytes)"(
      _kernel: string,
      _appId: BytesLike,
      _initializePayload: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "newAppProxyPinned(address,bytes32)"(
      _kernel: string,
      _appId: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "newAppProxy(address,bytes32)"(
      _kernel: string,
      _appId: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "newAppProxy(address,bytes32,bytes)"(
      _kernel: string,
      _appId: BytesLike,
      _initializePayload: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
